{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/statistics/Notification.js","data/index.js","components/statistics/Statistics.js","components/section/Section.js","components/main/Main.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","name","title","type","onClick","Notification","message","data","statsOptions","titleOptions","notifications","Statistics","countTotalFeedback","countPositiveFeedbackPercentage","values","language","total","totalOptions","option","value","Section","children","initialState","good","neutral","bad","Main","useState","state","setState","feedback","onChange","e","target","prev","stats","result","Math","ceil","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0779041f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className=\"feedbackOptions\">\r\n      <div className=\"counterControls\">\r\n        {options.map(({ name, title }) => (\r\n          <button\r\n            key={name}\r\n            type=\"button\"\r\n            name={name}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {title}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport \"../main/Main.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"statsList\">{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import options from \"./options.json\";\r\nimport statsOptions from \"./statsOptions.json\";\r\nimport titleOptions from \"./titleOptions.json\";\r\nimport notifications from \"./notifications.json\";\r\n\r\nconst data = { options, statsOptions, titleOptions, notifications };\r\nexport default data;\r\n","import React from \"react\";\r\nimport Notification from \"./Notification\";\r\nimport data from \"../../data\";\r\n\r\nconst { notifications } = data;\r\n\r\nconst Statistics = ({\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n  values,\r\n  statsOptions,\r\n  language,\r\n}) => {\r\n  const total = countTotalFeedback();\r\n\r\n  const totalOptions = statsOptions.map((option) => {\r\n    let value = 0;\r\n\r\n    switch (option.name) {\r\n      case \"total\":\r\n        value = countTotalFeedback();\r\n        break;\r\n      case \"feedback\":\r\n        value = countPositiveFeedbackPercentage();\r\n        break;\r\n      default:\r\n        value = values[option.name];\r\n    }\r\n\r\n    return {\r\n      ...option,\r\n      value,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <ul className=\"statsList\">\r\n          {totalOptions.map(({ title, name, value }) => (\r\n            <li className=\"statsListItem\">\r\n              <b>{title}: </b>\r\n              {value}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <Notification message={notifications[language].message} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { useState } from \"react\";\r\nimport FeedbackOptions from \"../feedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../statistics/Statistics\";\r\nimport Section from \"../section/Section\";\r\nimport \"./Main.css\";\r\nimport data from \"../../data\";\r\n\r\nconst { options, statsOptions, titleOptions } = data;\r\n\r\nconst initialState = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  language: \"en\",\r\n};\r\n\r\nconst Main = () => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const handleLangChange = (e) => {\r\n    const { value } = e.target;\r\n    setState((prev) => ({ ...prev, language: value }));\r\n  };\r\n\r\n  const handleGoodFeedback = (e) => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: prev[e.target.name] + 1,\r\n    }));\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const { good, neutral, bad } = state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const result = Math.ceil((state.good / countTotalFeedback()) * 100);\r\n    return `${result}%`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section\r\n        className=\"sectionTitle\"\r\n        title={titleOptions[state.language].feedback}\r\n      >\r\n        <select name=\"language\" onChange={handleLangChange}>\r\n          <option value=\"en\">English</option>\r\n          <option value=\"ru\">Русский</option>\r\n        </select>\r\n\r\n        <FeedbackOptions\r\n          options={options[state.language]}\r\n          onLeaveFeedback={handleGoodFeedback}\r\n        />\r\n      </Section>\r\n      <Section\r\n        className=\"sectionTitle\"\r\n        title={titleOptions[state.language].stats}\r\n      >\r\n        <Statistics\r\n          good={state.good}\r\n          neutral={state.neutral}\r\n          bad={state.bad}\r\n          values={state}\r\n          language={state.language}\r\n          statsOptions={statsOptions[state.language]}\r\n          countTotalFeedback={countTotalFeedback}\r\n          countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./components/main/Main\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Main />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}